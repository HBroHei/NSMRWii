def find_open_area_gpt(tiles):
    """
    Finds an open area of 4x4 with some solid tiles below it in the given list of tiles.
    
    Args:
    tiles (list): A list of tiles, where each tile is represented as a list [id, x, y, width, height].
    
    Returns:
    tuple or None: If an open area is found, returns a tuple (x, y) representing the top-left
    coordinate of the open area. Otherwise, returns None.
    """
    for y in range(len(tiles)-3):
        for x in range(len(tiles)):
            open_area = True
            for dx in range(4):
                for dy in range(4):
                    if [x, y+dy] in [[tile[1], tile[2]] for tile in tiles]:
                        open_area = False
                        break
                if not open_area:
                    break
            if open_area:
                # Check if there are any solid tiles below the open area
                has_tiles_below = False
                for dy in range(4, 8):
                    if [x, y+dy] in [[tile[1], tile[2]] for tile in tiles]:
                        has_tiles_below = True
                        break
                if has_tiles_below:
                    return (x, y)
    return None

def find_open_area_gemini(tile_list, area_size=4):
    """
    Finds an open area of a given size in a list of solid tiles.

    Args:
        tile_list: A list of solid tiles, each represented as [id, x, y, width, height].
        area_size: The desired size of the open area (default is 4).

    Returns:
        A tuple containing the top-left coordinates of the open area if found, otherwise None.
    """

    for y in range(0, max(tile[2] + tile[4] for tile in tile_list) + area_size):
        for x in range(0, max(tile[1] + tile[3] for tile in tile_list) + area_size):
            # Check if a 4x4 area is open starting at (x, y)
            is_open = True
            for i in range(area_size): # Check for 4x4 area
                for j in range(area_size):
                    # Check if any tile overlaps with the current area
                    if any(
                        x + i > tile[1] # cur pos x > tile x pos
                        and x + i < tile[1] + tile[3] # cur pos x < tile x pos + width
                        and y + j > tile[2] # cur pos y > tile y pos
                        and y + j < tile[2] + tile[4] # cur pos y < tile y pos + height
                        for tile in tile_list
                    ) or\
                    not any(
                        # Check if y+1 has solid tile
                        y + area_size + 1 == tile[2] for tile in tile_list
                    ):
                        is_open = False
                        break
                if not is_open:
                    break
            if is_open:
                return (x, y)
    return None

tiles = [
    [65, 187, 30, 2, 12], [58, 364, 30, 2, 1], [4096, 31, 38, 44, 1], [4097, 31, 39, 45, 2], [4096, 103, 36, 7, 1], [4099, 75, 37, 1, 1], [4106, 75, 38, 1, 1], [4101, 75, 36, 1, 1], [4096, 76, 36, 4, 1], [4102, 80, 36, 1, 1], [4097, 76, 37, 4, 4], [4101, 102, 36, 1, 1], [4112, 81, 37, 2, 2], [4111, 100, 37, 2, 2], [4114, 83, 38, 4, 2], [4113, 96, 38, 4, 2], [4096, 87, 39, 9, 1], [4106, 102, 37, 1, 1], [4105, 80, 37, 1, 1], [4097, 80, 38, 1, 3], [4097, 81, 39, 2, 2], [4097, 83, 40, 17, 1], [4097, 100, 39, 2, 2], [4097, 102, 38, 1, 3], [4102, 340, 31, 1, 1], [4112, 342, 36, 2, 2], [4097, 342, 38, 2, 3], [4112, 110, 36, 4, 3], [4111, 125, 36, 4, 3], [4114, 114, 38, 4, 2], [4113, 121, 38, 4, 2], [4096, 118, 39, 3, 1], [4097, 112, 39, 2, 2], [4097, 114, 40, 11, 1], [4097, 125, 39, 2, 2], [4102, 250, 35, 1, 1], [4101, 272, 35, 1, 1], [4112, 251, 36, 2, 2], [4111, 270, 36, 2, 2], [4114, 253, 37, 4, 2], [4113, 266, 37, 4, 2], [4096, 257, 38, 9, 1], [4106, 272, 36, 1, 1], [4097, 250, 37, 1, 4], [4097, 251, 38, 2, 3], [4097, 253, 39, 17, 2], [4097, 270, 38, 2, 3], [4097, 272, 37, 1, 4], [4096, 190, 27, 11, 1], [4102, 232, 31, 1, 1], [4096, 230, 39, 8, 1], [4113, 238, 38, 4, 2], [4111, 242, 37, 2, 2], [4101, 244, 35, 1, 1], [4106, 244, 37, 1, 1], [38, 58, 34, 1, 1], [38, 66, 34, 1, 1], [58, 74, 34, 1, 1], [58, 75, 33, 1, 1], [58, 76, 33, 1, 1], [45, 66, 30, 1, 1], [4096, 180, 36, 2, 1], [4097, 180, 37, 2, 4], [4099, 185, 33, 1, 8], [4101, 185, 32, 1, 1], [65, 183, 34, 2, 8], [4102, 182, 36, 1, 1], [4100, 182, 37, 1, 4], [4096, 129, 36, 18, 1], [4097, 131, 37, 16, 4], [4099, 179, 37, 1, 1], [4101, 179, 36, 1, 1], [45, 215, 31, 1, 1], [4099, 189, 28, 1, 12], [4101, 189, 27, 1, 1], [4096, 273, 35, 7, 1], [4096, 245, 35, 5, 1], [4097, 245, 36, 5, 5], [4096, 291, 38, 7, 1], [58, 281, 28, 1, 1], [4102, 298, 38, 1, 1], [4100, 298, 39, 1, 10], [4099, 302, 39, 1, 10], [4101, 302, 38, 1, 1], [4097, 303, 39, 9, 2], [4096, 303, 38, 9, 1], [4102, 312, 38, 1, 1], [4100, 312, 39, 1, 10], [4099, 316, 39, 1, 10], [4101, 316, 38, 1, 1], [4096, 317, 38, 1, 1], [4111, 318, 31, 14, 8], [4096, 332, 31, 5, 1], [26, 292, 34, 1, 1], [58, 262, 31, 1, 1], [58, 260, 31, 1, 1], [58, 232, 28, 1, 1], [58, 234, 26, 1, 1], [58, 236, 24, 1, 1], [58, 238, 22, 1, 1], [58, 240, 20, 1, 1], [58, 242, 20, 1, 1], [58, 244, 21, 1, 1], [58, 247, 23, 1, 1], [58, 250, 25, 1, 1], [58, 253, 27, 1, 1], [58, 281, 26, 1, 1], [58, 281, 24, 1, 1], [55, 289, 25, 27, 1], [58, 315, 23, 1, 1], [58, 256, 29, 1, 1], [58, 317, 21, 1, 1], [58, 319, 19, 1, 1], [4096, 399, 39, 1, 1], [4113, 406, 38, 4, 2], [4096, 410, 38, 54, 1], [4097, 410, 39, 54, 2], [4104, 340, 32, 1, 1], [4097, 317, 39, 3, 2], [4102, 147, 36, 1, 1], [4099, 160, 39, 1, 2], [4101, 160, 38, 1, 1], [4096, 161, 38, 18, 1], [4097, 161, 39, 19, 2], [58, 155, 30, 1, 1], [58, 156, 29, 1, 1], [58, 157, 30, 1, 1], [55, 278, 23, 7, 1], [4096, 151, 37, 1, 1], [4102, 152, 37, 1, 1], [4100, 152, 38, 1, 3], [4099, 150, 38, 1, 3], [4101, 150, 37, 1, 1], [4106, 179, 38, 1, 1], [55, 168, 34, 3, 1], [26, 164, 34, 4, 1], [26, 171, 34, 4, 1], [4112, 283, 34, 8, 5], [4097, 289, 39, 9, 2], [4105, 250, 36, 1, 1], [4097, 273, 36, 8, 5], [4096, 281, 34, 2, 1], [4097, 281, 35, 2, 6], [4097, 283, 36, 2, 5], [4097, 285, 37, 2, 4], [65, 153, 34, 2, 14], [4101, 280, 34, 1, 1], [4106, 280, 35, 1, 1], [4097, 103, 37, 7, 4], [55, 114, 31, 2, 1], [55, 118, 30, 3, 1], [55, 123, 31, 2, 1], [4104, 232, 33, 1, 1], [4118, 230, 33, 2, 2], [4116, 228, 34, 2, 3], [4107, 227, 36, 1, 1], [4100, 227, 37, 1, 1], [4105, 227, 38, 1, 1], [4097, 227, 33, 1, 3], [4097, 228, 33, 1, 2], [4097, 229, 33, 1, 1], [4112, 228, 38, 2, 2], [4099, 244, 36, 1, 1], [4097, 244, 38, 1, 3], [4097, 242, 39, 2, 2], [4097, 227, 39, 1, 2], [4097, 228, 40, 14, 1], [4097, 344, 39, 4, 2], [73, 332, 38, 2, 4], [4096, 339, 36, 3, 1], [4101, 334, 37, 1, 1], [4099, 334, 38, 1, 3], [4097, 339, 37, 3, 4], [4102, 337, 31, 1, 1], [4104, 337, 32, 1, 1], [4101, 339, 31, 1, 1], [31, 338, 31, 1, 1], [4097, 320, 38, 2, 3], [4097, 322, 37, 2, 4], [4097, 324, 36, 2, 5], [4097, 328, 34, 2, 7], [4097, 335, 38, 4, 3], [4113, 335, 36, 4, 2], [4107, 331, 33, 1, 1], [4100, 331, 34, 1, 7], [4097, 330, 33, 1, 8], [4098, 334, 32, 3, 1], [4118, 332, 32, 2, 2], [4103, 339, 32, 1, 1], [58, 306, 32, 3, 1], [58, 292, 32, 3, 1], [4114, 344, 37, 16, 5], [4096, 354, 31, 1, 1], [4101, 353, 31, 1, 1], [4103, 353, 33, 1, 1], [4102, 395, 35, 1, 1], [4105, 395, 37, 1, 1], [4110, 396, 37, 1, 2], [4097, 396, 39, 1, 2], [4097, 397, 40, 1, 1], [4097, 395, 38, 1, 3], [4100, 395, 36, 1, 1], [4118, 358, 30, 2, 2], [4099, 353, 32, 1, 1], [4111, 365, 39, 4, 3], [4096, 369, 39, 1, 1], [4097, 348, 40, 4, 1], [4098, 354, 33, 3, 1], [4097, 354, 32, 1, 1], [4097, 358, 30, 1, 1], [4113, 370, 38, 4, 2], [4114, 374, 38, 4, 2], [4117, 370, 30, 6, 4], [4111, 355, 29, 4, 3], [4104, 381, 34, 1, 1], [4102, 381, 33, 1, 1], [4096, 378, 39, 1, 1], [4101, 386, 33, 1, 1], [4099, 386, 34, 1, 3], [4106, 386, 37, 1, 1], [55, 382, 33, 4, 1], [4097, 369, 40, 2, 1], [4104, 357, 33, 1, 1], [4100, 357, 32, 1, 1], [4107, 357, 31, 1, 1], [4097, 355, 32, 2, 1], [4096, 360, 41, 5, 1], [58, 358, 32, 2, 2], [58, 368, 34, 1, 4], [58, 367, 34, 1, 3], [58, 366, 34, 1, 3], [58, 365, 34, 1, 2], [58, 362, 34, 3, 1], [58, 364, 35, 1, 1], [58, 369, 36, 2, 2], [20, 369, 35, 3, 1], [4112, 371, 29, 6, 4], [4098, 380, 34, 1, 1], [58, 360, 31, 10, 3], [58, 370, 32, 2, 3], [58, 369, 34, 1, 1], [58, 371, 36, 1, 2], [58, 372, 33, 2, 5], [58, 374, 34, 2, 4], [58, 376, 35, 3, 3], [4096, 363, 28, 4, 1], [4120, 360, 29, 4, 2], [4119, 366, 29, 4, 2], [4114, 367, 28, 4, 2], [4098, 364, 29, 2, 1], [4113, 359, 28, 4, 2], [4119, 376, 33, 4, 2], [4114, 377, 32, 4, 2], [4097, 371, 40, 10, 1], [4096, 383, 37, 3, 1], [4097, 381, 39, 2, 2], [58, 378, 38, 1, 1], [4102, 186, 32, 1, 1], [4100, 186, 33, 1, 8], [4112, 397, 38, 2, 2], [4097, 398, 40, 4, 1], [4100, 232, 32, 1, 1], [4110, 203, 28, 6, 9], [4097, 227, 32, 5, 1], [4097, 127, 38, 2, 3], [4097, 129, 37, 2, 4], [4097, 110, 38, 2, 3], [4114, 387, 33, 8, 3], [4097, 387, 35, 2, 6], [26, 168, 30, 1, 1], [4097, 326, 35, 2, 6], [4139, 63, 37, 1, 1], [4138, 60, 37, 1, 1], [4137, 59, 37, 1, 1], [4140, 65, 37, 1, 1], [4141, 66, 37, 1, 1], [4141, 72, 37, 1, 1], [4137, 69, 37, 1, 1], [4138, 163, 37, 1, 1], [4140, 164, 37, 1, 1], [4141, 165, 37, 1, 1], [4137, 162, 37, 1, 1], [4137, 333, 30, 1, 1], [4140, 335, 30, 1, 1], [4141, 336, 30, 1, 1], [4145, 64, 37, 1, 1], [4146, 62, 37, 1, 1], [4138, 174, 37, 1, 1], [4140, 176, 37, 1, 1], [4141, 177, 37, 1, 1], [4137, 173, 37, 1, 1], [4139, 175, 37, 1, 1], [4138, 337, 20, 1, 1], [4140, 341, 20, 1, 1], [4141, 342, 20, 1, 1], [4137, 336, 20, 1, 1], [4139, 338, 20, 2, 1], [4140, 301, 24, 1, 1], [4141, 302, 24, 1, 1], [4137, 297, 24, 1, 1], [4139, 298, 24, 3, 1], [4147, 298, 24, 1, 1], [4146, 299, 24, 1, 1], [4097, 287, 38, 2, 3], [26, 65, 34, 1, 1], [26, 67, 34, 1, 1], [4145, 334, 30, 1, 1], [4147, 61, 37, 1, 1], [4145, 340, 20, 1, 1], [4146, 71, 37, 1, 1], [4137, 167, 37, 1, 1], [4141, 168, 37, 1, 1], [4137, 280, 22, 1, 1], [4141, 282, 22, 1, 1], [4138, 281, 22, 1, 1], [4148, 363, 26, 4, 2], [4142, 381, 32, 1, 1], [4143, 386, 32, 1, 1], [4097, 389, 35, 2, 6], [4111, 379, 37, 4, 3], [4097, 383, 38, 4, 3], [4097, 391, 36, 4, 5], [4140, 44, 37, 1, 1], [4141, 45, 37, 1, 1], [4137, 40, 37, 1, 1], [4138, 41, 37, 1, 1], [4145, 42, 37, 1, 1], [4138, 70, 37, 1, 1], [4147, 43, 37, 1, 1], [58, 137, 28, 1, 1], [4096, 402, 38, 1, 1], [4096, 405, 39, 1, 1], [4097, 403, 40, 7, 1], [4097, 402, 39, 1, 2], [4111, 400, 38, 2, 2], [4112, 403, 38, 2, 2], [58, 139, 28, 1, 1], [26, 294, 34, 1, 1], [27, 293, 34, 1, 1], [28, 169, 30, 1, 1], [26, 170, 30, 1, 1], [4097, 151, 38, 1, 3], [4100, 147, 37, 1, 1], [4142, 423, 37, 1, 1], [4143, 425, 37, 1, 1], [4144, 429, 37, 1, 1], [4097, 190, 28, 11, 13], [4096, 226, 31, 6, 1], [4096, 211, 35, 9, 1], [4109, 222, 32, 2, 3], [27, 214, 31, 1, 1], [27, 216, 31, 1, 1], [4097, 203, 30, 1, 11], [4097, 204, 31, 1, 10], [4097, 205, 32, 1, 9], [4097, 206, 33, 1, 8], [4097, 207, 34, 1, 7], [4097, 208, 35, 1, 6], [4097, 209, 36, 13, 5], [4097, 222, 35, 1, 6], [4097, 223, 34, 1, 7], [4097, 201, 29, 2, 12], [4138, 356, 21, 1, 1], [4140, 358, 21, 1, 1], [4141, 359, 21, 1, 1], [4137, 355, 21, 1, 1], [4145, 357, 21, 1, 1], [4144, 331, 20, 1, 1], [4143, 333, 20, 1, 1], [4111, 224, 31, 2, 2], [4111, 220, 34, 2, 2], [4112, 209, 34, 2, 2], [4112, 201, 27, 2, 2], [4097, 224, 33, 2, 8], [4097, 226, 32, 1, 9], [73, 148, 34, 2, 14], [65, 158, 34, 2, 14], [4100, 147, 38, 1, 3], [58, 90, 32, 1, 1], [58, 92, 32, 1, 1], [55, 135, 32, 7, 1], [55, 330, 21, 17, 1], [55, 354, 22, 7, 1], [55, 368, 21, 3, 1], [26, 306, 34, 1, 1], [26, 308, 34, 1, 1], [45, 281, 30, 1, 1], [28, 307, 34, 1, 1], [97, 103, 35, 6, 1], [97, 118, 33, 3, 1], [97, 130, 35, 1, 1], [97, 132, 35, 1, 1], [97, 134, 35, 1, 1], [97, 136, 35, 1, 1], [97, 138, 35, 1, 1], [97, 140, 35, 1, 1], [97, 142, 35, 1, 1], [97, 144, 35, 1, 1], [97, 146, 35, 1, 1], [97, 152, 30, 1, 1], [97, 151, 29, 1, 1], [97, 150, 30, 1, 1], [97, 165, 33, 1, 1], [97, 167, 33, 1, 1], [97, 169, 33, 1, 1], [97, 171, 33, 1, 1], [97, 173, 33, 1, 1], [97, 161, 36, 1, 1], [97, 163, 36, 1, 1], [97, 165, 36, 1, 1], [97, 167, 36, 1, 1], [97, 169, 36, 1, 1], [97, 171, 36, 1, 1], [97, 173, 36, 1, 1], [97, 175, 36, 1, 1], [97, 177, 36, 1, 1], [97, 168, 26, 3, 3], [97, 235, 32, 3, 1], [97, 240, 33, 3, 1], [97, 245, 34, 5, 1], [97, 293, 37, 1, 1], [97, 295, 37, 1, 1], [97, 297, 37, 1, 1], [97, 303, 37, 1, 1], [97, 305, 37, 1, 1], [97, 307, 37, 1, 1], [97, 309, 37, 1, 1], [97, 311, 37, 1, 1], [97, 319, 36, 1, 1], [97, 321, 35, 1, 1], [97, 323, 34, 1, 1], [97, 325, 33, 1, 1], [97, 327, 32, 1, 1], [97, 329, 31, 1, 1], [97, 356, 29, 1, 1], [97, 358, 28, 1, 1], [97, 362, 27, 1, 1], [97, 367, 27, 1, 1], [97, 360, 27, 1, 1], [97, 369, 27, 1, 1], [97, 371, 28, 1, 1], [97, 373, 29, 1, 1], [97, 375, 30, 1, 1], [97, 377, 31, 1, 1], [97, 275, 30, 1, 1], [97, 276, 29, 1, 1], [97, 277, 30, 1, 1], [97, 240, 25, 5, 5], [97, 245, 26, 1, 3], [97, 239, 26, 1, 3], [97, 241, 24, 3, 1], [97, 241, 30, 3, 1], [97, 65, 31, 3, 2], [97, 65, 26, 3, 3], [97, 90, 30, 3, 2], [97, 91, 32, 1, 1], [97, 89, 31, 1, 2], [97, 93, 31, 1, 2], [97, 87, 31, 1, 2], [97, 95, 31, 1, 2], [97, 88, 31, 1, 1], [97, 94, 31, 1, 1], [97, 118, 27, 3, 2], [97, 114, 28, 2, 2], [97, 123, 28, 2, 2], [97, 135, 30, 7, 2], [97, 214, 23, 1, 7], [97, 216, 23, 1, 7], [97, 215, 27, 1, 3], [97, 190, 26, 1, 1], [97, 192, 26, 1, 1], [97, 194, 26, 1, 1], [97, 196, 26, 1, 1], [97, 198, 26, 1, 1], [97, 200, 26, 1, 1], [97, 292, 30, 3, 2], [97, 306, 30, 3, 2], [97, 334, 27, 6, 2], [97, 183, 32, 2, 2], [97, 187, 28, 2, 2], [97, 400, 24, 5, 5], [97, 405, 25, 1, 3], [97, 399, 25, 1, 3], [97, 401, 23, 3, 1], [97, 401, 29, 3, 1]
    ]

print(find_open_area_gemini(tiles))